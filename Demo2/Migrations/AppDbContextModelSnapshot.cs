// <auto-generated />
using System;
using Demo2.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Demo2.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.13");

            modelBuilder.Entity("Demo2.Data.Entities.CourseEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CourseTbl");
                });

            modelBuilder.Entity("Demo2.Data.Entities.CourseSubjectEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SubjectId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("SubjectId");

                    b.ToTable("CourseSubjectTbl");
                });

            modelBuilder.Entity("Demo2.Data.Entities.InstructorEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("FatherName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<double>("Salary")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("InstructorTbl");
                });

            modelBuilder.Entity("Demo2.Data.Entities.InstructorSubjectEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("InstratuctorId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SubjectId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("InstratuctorId")
                        .IsUnique();

                    b.HasIndex("SubjectId")
                        .IsUnique();

                    b.ToTable("InstructorSubjectTbl");
                });

            modelBuilder.Entity("Demo2.Data.Entities.StudentCourseEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentCourseTbl");
                });

            modelBuilder.Entity("Demo2.Data.Entities.StudentEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("FatherName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("RollNumber")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("StudentTbl");
                });

            modelBuilder.Entity("Demo2.Data.Entities.SubjectEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SubjectTbl");
                });

            modelBuilder.Entity("Demo2.Data.Entities.CourseSubjectEntity", b =>
                {
                    b.HasOne("Demo2.Data.Entities.CourseEntity", "Course")
                        .WithMany("CourseSubjects")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Demo2.Data.Entities.SubjectEntity", "Subject")
                        .WithMany("CourseSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("Demo2.Data.Entities.InstructorSubjectEntity", b =>
                {
                    b.HasOne("Demo2.Data.Entities.InstructorEntity", "InstructorEntity")
                        .WithOne("InstructorSubjectEntity")
                        .HasForeignKey("Demo2.Data.Entities.InstructorSubjectEntity", "InstratuctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Demo2.Data.Entities.SubjectEntity", "SubjectEntity")
                        .WithOne("InstructorSubjectEntity")
                        .HasForeignKey("Demo2.Data.Entities.InstructorSubjectEntity", "SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InstructorEntity");

                    b.Navigation("SubjectEntity");
                });

            modelBuilder.Entity("Demo2.Data.Entities.StudentCourseEntity", b =>
                {
                    b.HasOne("Demo2.Data.Entities.CourseEntity", "CourseEntity")
                        .WithMany("StudentCourseEntities")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Demo2.Data.Entities.StudentEntity", "StudentEntity")
                        .WithMany("StudentCourseEntities")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CourseEntity");

                    b.Navigation("StudentEntity");
                });

            modelBuilder.Entity("Demo2.Data.Entities.CourseEntity", b =>
                {
                    b.Navigation("CourseSubjects");

                    b.Navigation("StudentCourseEntities");
                });

            modelBuilder.Entity("Demo2.Data.Entities.InstructorEntity", b =>
                {
                    b.Navigation("InstructorSubjectEntity");
                });

            modelBuilder.Entity("Demo2.Data.Entities.StudentEntity", b =>
                {
                    b.Navigation("StudentCourseEntities");
                });

            modelBuilder.Entity("Demo2.Data.Entities.SubjectEntity", b =>
                {
                    b.Navigation("CourseSubjects");

                    b.Navigation("InstructorSubjectEntity");
                });
#pragma warning restore 612, 618
        }
    }
}
